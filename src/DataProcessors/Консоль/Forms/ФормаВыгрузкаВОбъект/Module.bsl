// AKOR ОМСК

////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПутьКХранилищу = Неопределено;
	Если Параметры.Свойство("ПутьКХранилищу", ПутьКХранилищу) Тогда

		ТаблицаИсточник = ПолучитьИзВременногоХранилища(ПутьКХранилищу);

		МассивДобавляемыхРеквизитов = Новый Массив;
		Для Каждого Колонка Из ТаблицаИсточник.Колонки Цикл
			РеквизитФормы = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ПолученнаяТаблица", Колонка.Имя);
			МассивДобавляемыхРеквизитов.Добавить(РеквизитФормы);
		КонецЦикла;
		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

		Если ТипЗнч(ТаблицаИсточник) = Тип("ТаблицаЗначений") Тогда
			ОписаниеКолонок = ДанныеФормыВЗначение(КолонкиИсточника, Тип("ТаблицаЗначений"));
			лПолученнаяТаблица = ДанныеФормыВЗначение(ПолученнаяТаблица, Тип("ТаблицаЗначений"));

			Для Каждого Колонка Из ТаблицаИсточник.Колонки Цикл
				НоваяСтрока = ОписаниеКолонок.Добавить();
				НоваяСтрока.Имя = Колонка.Имя;
				НоваяСтрока.Тип = Колонка.ТипЗначения;
			КонецЦикла;

			Для Каждого Строка Из ТаблицаИсточник Цикл
				НоваяСтрока = лПолученнаяТаблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			КонецЦикла;

			ЗначениеВДанныеФормы(лПолученнаяТаблица, ПолученнаяТаблица);
			ЗначениеВДанныеФормы(ОписаниеКолонок, КолонкиИсточника);
		КонецЕсли;
	КонецЕсли;

	СисИнфо = Новый СистемнаяИнформация;
	Объект.ВерсияПриложения = СисИнфо.ВерсияПриложения;

	Если Лев(Объект.ВерсияПриложения, 3) = "8.2" Тогда
		Объект.МодальностьРазрешена = Истина;
	Иначе
		РежимИспользованияМодальности = Метаданные["РежимИспользованияМодальности"];
		РежимИспользованияМодальности_Использовать = Метаданные["СвойстваОбъектов"].РежимИспользованияМодальности.Использовать;
		Объект.МодальностьРазрешена = РежимИспользованияМодальности = РежимИспользованияМодальности_Использовать;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ТипОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Справочник");
	СписокВыбора.Добавить("Документ");
	СписокВыбора.Добавить("Обработка");
	СписокВыбора.Добавить("ВнешняяОбработка");

	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ВыбратьИзСписка(СписокВыбора, Элемент, СписокВыбора.НайтиПоЗначению(ЭтотОбъект.ТипОбъекта));
		|ТипОбъектаНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ТипОбъектаНачалоВыбораЗавершение"", ЭтотОбъект);
		|ПоказатьВыборИзСписка(Оповещение, СписокВыбора, Элемент, СписокВыбора.НайтиПоЗначению(ЭтотОбъект.ТипОбъекта));";
	КонецЕсли;

	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаНачалоВыбораЗавершение(Значение, Параметры) Экспорт

	Если Значение <> Неопределено И Значение.Значение <> ЭтотОбъект.ТипОбъекта Тогда
		ЭтотОбъект.ТипОбъекта = Значение;
		ЭтотОбъект.ИмяОбъекта = "";
		ЭтотОбъект.ТаблицаОбъекта = "";
		ЭтотОбъект.СопоставлениеКолонок.Очистить();
	КонецЕсли;

КонецПроцедуры // ТипОбъектаНачалоВыбораЗавершение()

&НаКлиенте
Процедура ИмяОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если ТипОбъекта = "" Тогда
		Возврат;
	КонецЕсли;

	Если ТипОбъекта = "ВнешняяОбработка" Тогда
		Путь = ПолучитьПутьКОбработке();
		Если Путь <> Неопределено И Путь <> ЭтотОбъект.ИмяОбъекта Тогда
			ЭтотОбъект.ИмяОбъекта = Путь;
			ЭтотОбъект.ТаблицаОбъекта = "";
			ЭтотОбъект.СопоставлениеКолонок.Очистить();
		КонецЕсли;
		Возврат;
	КонецЕсли;

	ПутьКФорме = ПолучитьИмяОбработки() + ".Форма.ФормаВыбораИзСписка";
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ТипОбъекта", ЭтотОбъект.ТипОбъекта);
	ПараметрыОткрытия.Вставить("ИмяОбъекта", ЭтотОбъект.ИмяОбъекта);

	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытия);
		|ИмяОбъектаНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ИмяОбъектаНачалоВыбораЗавершение"", ЭтотОбъект);
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытия, , , , , Оповещение);";
	КонецЕсли;

	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Функция ИмяОбъектаНачалоВыбораЗавершение(Результат, Параметры) Экспорт

	Если Результат <> Неопределено И Результат <> ЭтотОбъект.ИмяОбъекта Тогда
		ЭтотОбъект.ИмяОбъекта = Результат;
		ЭтотОбъект.ТаблицаОбъекта = "";
		ЭтотОбъект.СопоставлениеКолонок.Очистить();
	КонецЕсли;

КонецФункции // ВыбратьИмяОбъектаНаСервере()

&НаКлиенте
Процедура ТаблицаОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если ИмяОбъекта = "" Тогда
		Возврат;
	КонецЕсли;

	Если ТипОбъекта = "ВнешняяОбработка" Тогда
		Список = СоздатьСписокТабличныхЧастейВнешнейОбработки();
	Иначе
		Список = СоздатьСписокТабличныхЧастей(ЭтотОбъект.ТипОбъекта, ЭтотОбъект.ИмяОбъекта);
	КонецЕсли;

	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ВыбратьИзСписка(Список, Элемент, Список.НайтиПоЗначению(ЭтотОбъект.ТаблицаОбъекта));
		|ТаблицаОбъектаНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""ТаблицаОбъектаНачалоВыбораЗавершение"", ЭтотОбъект);
		|ПоказатьВыборИзСписка(Оповещение, Список, Элемент, Список.НайтиПоЗначению(ЭтотОбъект.ТаблицаОбъекта));";
	КонецЕсли;

	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОбъектаНачалоВыбораЗавершение(Значение, Параметры) Экспорт

	Если Значение <> Неопределено И Значение.Значение <> ЭтотОбъект.ТаблицаОбъекта Тогда
		ЭтотОбъект.ТаблицаОбъекта = Значение;
		ЭтотОбъект.СопоставлениеКолонок.Очистить();
		ВывестиКолонкиОбъекта(ЭтотОбъект.ТипОбъекта, ЭтотОбъект.ИмяОбъекта, ЭтотОбъект.ТаблицаОбъекта);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СоздатьСписокТабличныхЧастейВнешнейОбработки()

	ВнОбработка = ВнешниеОбработки.Создать(ИмяОбъекта);
	Список = Новый СписокЗначений;
	Для Каждого ТЧ Из ВнОбработка.Метаданные().ТабличныеЧасти Цикл
		Список.Добавить(ТЧ.Имя);
	КонецЦикла;

	Возврат Список;

КонецФункции // СоздатьСписокТабличныхЧастейВнешнейОбработки()

////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ КОМАНДНОЙ ПАНЕЛИ СОПОСТАВЛЕНИЯ КОЛОНОК

&НаКлиенте
Процедура ЗаполнитьАвтоматически(Команда)

	УбратьВыделенияСтрок();

	ЗаполнитьАвтоматическиНаСервере();

	ЗаполнитьАвтоматическиНаСервере();

	Элементы.КолонкиИсточника.ТекущаяСтрока = -1;
	Элементы.СопоставлениеКолонок.ТекущаяСтрока = -1;
	ЭтотОбъект.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАвтоматическиНаСервере()

	СопоставленныеКолонки = ДанныеФормыВЗначение(СопоставлениеКолонок, Тип("ТаблицаЗначений"));
	ИсточникКолонки = ДанныеФормыВЗначение(КолонкиИсточника, Тип("ТаблицаЗначений"));

	Для Каждого Строка Из СопоставленныеКолонки Цикл
		Отбор = Новый Структура("Имя", Строка.ИмяКолонкиПриемника);
		ОдноименныеСтроки = ИсточникКолонки.НайтиСтроки(Отбор);
		Для Каждого ОдноименнаяСтрока Из ОдноименныеСтроки Цикл

			Для Каждого ЭлТип Из Строка.ТипКолонкиПриемника.Типы() Цикл
				Если ОдноименнаяСтрока.Тип.СодержитТип(ЭлТип) Тогда
					Строка.КолонкаИсточник = Строка.ИмяКолонкиПриемника;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ЗначениеВДанныеФормы(СопоставленныеКолонки, СопоставлениеКолонок);
	ЗначениеВДанныеФормы(ИсточникКолонки, КолонкиИсточника);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ ТАБЛИЧНОЙ ЧАСТИ СОПОСТАВЛЕНИЯ КОЛОНОК

&НаКлиенте
Процедура СопоставлениеКолонокПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.СопоставлениеКолонок.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТипКолонки = ТекущиеДанные.ТипКолонкиПриемника;
	УбратьВыделенияСтрок();

	Для Каждого Строка Из ЭтотОбъект.КолонкиИсточника Цикл
		Для Каждого ЭлТип Из Строка.Тип.Типы() Цикл
			Если ТипКолонки.СодержитТип(ЭлТип) Тогда
				Строка.Подсветка = Истина;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Элементы.КолонкиИсточника.ТекущаяСтрока = -1;
	ЭтотОбъект.ОбновитьОтображениеДанных();

КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеКолонокКолонкаИсточникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ТекущаяСтрока = СопоставлениеКолонок.НайтиПоИдентификатору(Элементы.СопоставлениеКолонок.ТекущаяСтрока);

	Список = Новый СписокЗначений;

	Для Каждого Строка Из КолонкиИсточника Цикл
		Список.Добавить(Строка.Имя);
	КонецЦикла;

	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|Значение = ВыбратьИзСписка(Список, Элемент, Список.НайтиПоЗначению(ТекущаяСтрока.КолонкаИсточник));
		|СопоставлениеКолонокКолонкаИсточникНачалоВыбораЗавершение(Значение, Неопределено);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(""СопоставлениеКолонокКолонкаИсточникНачалоВыбораЗавершение"", ЭтотОбъект);
		|ПоказатьВыборИзСписка(Оповещение, Список, Элемент, Список.НайтиПоЗначению(ТекущаяСтрока.КолонкаИсточник));";
	КонецЕсли;

	Выполнить(КодВыполнения);

КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеКолонокКолонкаИсточникНачалоВыбораЗавершение(Значение, Параметры) Экспорт

	ТекущаяСтрока = СопоставлениеКолонок.НайтиПоИдентификатору(Элементы.СопоставлениеКолонок.ТекущаяСтрока);

	Если Значение <> Неопределено И Значение.Значение <> ТекущаяСтрока.КолонкаИсточник Тогда

		ТекущаяСтрока.КолонкаИсточник = Значение;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ ТАБЛИЧНОЙ ЧАСТИ КОЛОНОК ИСТОЧНИКА

&НаКлиенте
Процедура КолонкиИсточникаПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элементы.КолонкиИсточника.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТипКолонки = ТекущиеДанные.Тип;
	УбратьВыделенияСтрок();

	Для Каждого Строка Из ЭтотОбъект.СопоставлениеКолонок Цикл
		Для Каждого ЭлТип Из Строка.ТипКолонкиПриемника.Типы() Цикл
			Если ТипКолонки.СодержитТип(ЭлТип) Тогда
				Строка.Подсветка = Истина;
				Продолжить;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Элементы.СопоставлениеКолонок.ТекущаяСтрока = -1;
	ЭтотОбъект.ОбновитьОтображениеДанных();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// ОРАБОТЧИКИ НИЖНЕЙ КОМАНДНОЙ ПАНЕЛИ

&НаКлиенте
Процедура ОК(Команда)

	Если ТипОбъекта = "Обработка" Тогда

		Форма = ПолучитьФорму(ТипОбъекта + "." + ИмяОбъекта + ".Форма");
		ДанныеФормы = Форма.Объект;
		ЗаполнитьНаСервере(ДанныеФормы);
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		Форма.Открыть();

	ИначеЕсли ТипОбъекта = "ВнешняяОбработка" Тогда

		АдресХранилища = "";
		Результат = ПоместитьФайл(АдресХранилища, ИмяОбъекта, , Ложь);
		ИмяОбработки = ПодключитьВнешнююОбработку(АдресХранилища);

		Форма = ПолучитьФорму("ВнешняяОбработка."+ ИмяОбработки +".Форма");
		ДанныеФормы = Форма.Объект;
		ЗаполнитьНаСервере(ДанныеФормы);
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		Форма.Открыть();

	Иначе

		Форма = ПолучитьФорму(ТипОбъекта + "." + ИмяОбъекта + ".ФормаОбъекта");
		ДанныеФормы = Форма.Объект;
		ЗаполнитьНаСервере(ДанныеФормы);
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
		Форма.Открыть();

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ОРАБОТЧИКИ

&НаКлиенте
Функция ПолучитьПутьКОбработке()

	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = '""Внешняя обработка""'; en = '""External Data Processor""'")+"(*.epf)|*.epf";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите файл'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Возврат ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции // ПолучитьПутьСохраненияФайла()

&НаСервере
Функция СоздатьСписокТабличныхЧастей(ТипОбъекта, ИмяОбъекта)

	Список = Новый СписокЗначений;

	Если ТипОбъекта = "Справочник" Тогда
		ИмяКоллекции = "Справочники";
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		ИмяКоллекции = "Документы";
	ИначеЕсли ТипОбъекта = "Обработка" Тогда
		ИмяКоллекции = "Обработки";
	КонецЕсли;

	Для Каждого Строка Из Метаданные[ИмяКоллекции][ИмяОбъекта].ТабличныеЧасти Цикл
		Список.Добавить(Строка.Имя);
	КонецЦикла;

	Возврат Список;

КонецФункции // СоздатьСписокТабличныхЧастей()

&НаСервере
Функция СоздатьОбъект(ТипОбъекта, ИмяОбъекта)

	Если ТипОбъекта = "Справочник" Тогда
		ИмяКоллекции = "Справочники";
		Постфикс = "Элемент";
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		ИмяКоллекции = "Документы";
		Постфикс = "Документ";
	ИначеЕсли ТипОбъекта = "Обработка" Тогда
		ИмяКоллекции = "Обработки";
		Постфикс = "";
	ИначеЕсли ТипОбъекта = "ВнешняяОбработка" Тогда
		ИмяКоллекции = "ВнешняяОбработка";
		Постфикс = "";
		Возврат ВнешниеОбработки.Создать(ИмяОбъекта);
	КонецЕсли;

	НовыйОбъект = Неопределено;
	Выполнить("НовыйОбъект = Вычислить(""" + ИмяКоллекции + "." + ИмяОбъекта + """).Создать" + Постфикс + "();");
	Возврат НовыйОбъект;

КонецФункции // СоздатьОбъект()()

Процедура ВывестиКолонкиОбъекта(ТипОбъекта, ИмяОбъекта, ТабличнаяЧасть)

	Если ТипОбъекта = "Справочник" Тогда
		ИмяКоллекции = "Справочники";
	ИначеЕсли ТипОбъекта = "Документ" Тогда
		ИмяКоллекции = "Документы";
	ИначеЕсли ТипОбъекта = "Обработка" Тогда
		ИмяКоллекции = "Обработки";
	ИначеЕсли ТипОбъекта = "ВнешняяОбработка" Тогда

		ВнОбработка = ВнешниеОбработки.Создать(ИмяОбъекта);
		Для Каждого Строка Из ВнОбработка.Метаданные().ТабличныеЧасти[ТабличнаяЧасть].Реквизиты Цикл
			НоваяСтрока = ЭтотОбъект.СопоставлениеКолонок.Добавить();
			НоваяСтрока.ИмяКолонкиПриемника = Строка.Имя;
			НоваяСтрока.ТипКолонкиПриемника = Строка.Тип;
		КонецЦикла;

		Возврат;
	КонецЕсли;

	Для Каждого Строка Из Метаданные[ИмяКоллекции][ИмяОбъекта].ТабличныеЧасти[ТабличнаяЧасть].Реквизиты Цикл
		НоваяСтрока = ЭтотОбъект.СопоставлениеКолонок.Добавить();
		НоваяСтрока.ИмяКолонкиПриемника = Строка.Имя;
		НоваяСтрока.ТипКолонкиПриемника = Строка.Тип;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УбратьВыделенияСтрок()

	Для Каждого Строка Из ЭтотОбъект.КолонкиИсточника Цикл
		Строка.Подсветка = Ложь;
	КонецЦикла;

	Для Каждого Строка Из ЭтотОбъект.СопоставлениеКолонок Цикл
		Строка.Подсветка = Ложь;
	КонецЦикла;

КонецПроцедуры // УбратьВыделенияСтрок()

&НаСервере
Процедура ЗаполнитьНаСервере(НовыйОбъект)

	ЗаполнитьТабличнуюЧастьОбъекта(НовыйОбъект);

КонецПроцедуры

&НаСервере
Функция ЗаполнитьТабличнуюЧастьОбъекта(НовыйОбъект)

	мНовыйОбъект = СоздатьОбъект(ТипОбъекта, ИмяОбъекта);

	ТаблицаИсточник = ДанныеФормыВЗначение(ПолученнаяТаблица, Тип("ТаблицаЗначений"));
	СопоставленныеКолонки = ДанныеФормыВЗначение(СопоставлениеКолонок, Тип("ТаблицаЗначений"));
	КолонкиПриёмника = мНовыйОбъект.Метаданные().ТабличныеЧасти[ТаблицаОбъекта].Реквизиты;
	КоллекцияКолонокИсточника = ТаблицаИсточник.Колонки;

	Для Каждого Строка Из ТаблицаИсточник Цикл

		НоваяСтрока = НовыйОбъект[ТаблицаОбъекта].Добавить();

		Для Каждого Сопоставление Из СопоставленныеКолонки Цикл
			Если КолонкиПриёмника.Найти(Сопоставление.ИмяКолонкиПриемника) <> Неопределено
				И КоллекцияКолонокИсточника.Найти(Сопоставление.КолонкаИсточник) <> Неопределено Тогда

				НоваяСтрока[Сопоставление.ИмяКолонкиПриемника] = Строка[Сопоставление.КолонкаИсточник];

			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

	ЗначениеВДанныеФормы(ТаблицаИсточник, ПолученнаяТаблица);
	ЗначениеВДанныеФормы(СопоставленныеКолонки, СопоставлениеКолонок);

	Возврат НовыйОбъект;

КонецФункции

&НаСервере
Функция ПодключитьВнешнююОбработку(АдресХранилища)

	Возврат ВнешниеОбработки.Подключить(АдресХранилища);

КонецФункции

&НаСервере
Функция ПолучитьИмяОбработки()

	Возврат РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();

КонецФункции

&НаКлиенте
Процедура ОткрытьФормуАвтоматически(ИмяФормы, ПараметрыОткрытияФормы, ИмяПроцедуры, ПараметрыПроцедуры)

	ПутьКФорме = ПолучитьИмяОбработки() + ".Форма." + ИмяФормы;

	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|ОписаниеВыбранныхТипов = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытияФормы);
		|" + ИмяПроцедуры + "(ОписаниеВыбранныхТипов, ПараметрыОткрытия);";
	Иначе
		КодВыполнения = "
		|Оповещение = Новый ОписаниеОповещения(" + """" + ИмяПроцедуры + """" + ", ЭтотОбъект, ПараметрыПроцедуры);
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытияФормы, , , , , Оповещение);";
	КонецЕсли;

	Выполнить(КодВыполнения);

КонецПроцедуры
